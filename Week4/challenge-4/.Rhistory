setwd("~/Desktop/nus/y2s1/NM2207/Week4/challenge-4")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data <- read_csv("CommQuest2023_Larger.csv")
# Enter code here
library(tidyverse)
comm_data <- read_csv("CommQuest2023_Larger.csv")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
new_dataframe <- comm_data %>% select(data,channel,message)
# Enter code here
new_dataframe <- comm_data %>% select(date, channel, message)
# Enter code here
comm_data %>% select(date, channel, message)
# Enter code here
comm_data <- select(date, channel, message)
# Enter code here
library(dplyr)
new_dataframe <- comm_data %>% select(date, channel, message)
# Enter code here
install.packages("dplyr")
library(dplyr)
new_dataframe <- comm_data %>% select(date, channel, message)
install.packages("dplyr")
# Enter code here
install.packages("dplyr")
library(dplyr)
new_dataframe <- comm_data %>% select(date, channel, message)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
select(data, channel, message)
# Enter code here
filtered_dataframe <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
filtered_dataframe <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
# Enter code here
filtered_dataframe <- comm_data %>% filter(channel == "Twitter", date == as.Date("2023-08-02"))
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
# Load the dplyr package if it's not already loaded
library(dplyr)
# Create a new dataframe with selected columns
new_dataframe <- select(comm_data, date, channel, message)
# Enter code here
# Load the dplyr package if it's not already loaded
new_dataframe <- comm_data[, c("date", "channel", "message")]
# Enter code here
comm_data %>% group_by(sender) %>%
summarize(sentiment_score = mean(value))
# Enter code here
comm_data %>% group_by(sender) %>%
summarise(sentiment_score = mean(value))
# Enter code here
comm_data %>% group_by(sender) %>%
summarise(sentiment_score = mean(value)) %>% filter(sentiment_score > 0) %>%
select(sender, sentiment_score) %>%
arrange(desc(sentiment_score)) %>%
head(3)
# Enter code here
comm_data %>% group_by(sender) %>%
sentiment = count() %>% filter(sentiment > 0) %>%
select(sender, sentiment_score) %>%
arrange(desc(sentiment_score)) %>%
head(3)
# Enter code here
positive_sentiment <- comm_data %>%
filter(sentiment > 0)
average_sentiment <- positive_sentiment %>%
group_by(sender) %>%
summarize(average_sentiment_score = mean(sentiment_score))
# Enter code here
positive_sentiment <- comm_data %>%
filter(sentiment > 0)
average_sentiment <- positive_sentiment %>%
group_by(sender) %>%
summarize(average_sentiment_score = mean(sentiment))
top_three_senders <- average_sentiment %>%
arrange(desc(average_sentiment_score)) %>%
head(3)
# Enter code here
# Filter for positive sentiment scores
positive_sentiment <- comm_data %>%
filter(sentiment_score > 0)
# Enter code here
# Filter for positive sentiment scores
positive_sentiment <- comm_data %>%
filter(sentiment > 0)
# Group by sender and calculate average sentiment scores
average_sentiment <- positive_sentiment %>%
group_by(sender) %>%
summarize(average_sentiment_score = mean(sentiment))
# Arrange in descending order and select the top three senders
top_three_senders <- average_sentiment %>%
arrange(desc(average_sentiment_score)) %>%
head(3)
# Display the result
print(top_three_senders)
# Enter code here
comm_data %>%
mutate(date) %>%
group_by(date) %>%
summarise(average_sentiment_score = mean(sentiment)) %>%
arrange(date)
# Display the result
print(average_sentiment_by_day)
# Enter code here
average_sentiment_by_day <- comm_data %>%
mutate(date) %>%
group_by(date) %>%
summarise(average_sentiment_score = mean(sentiment)) %>%
arrange(date)
# Display the result
print(average_sentiment_by_day)
# Enter code here
average_sentiment_by_day <- comm_data %>%
mutate(date) %>% group_by(date) %>% summarise(average_sentiment_score = mean(sentiment)) %>% arrange(date)
print(average_sentiment_by_day)
# Enter code here
comm_data %>%
group_by(channel) %>%
count()
# Enter code here
comm_data %>%
group_by(sender) %>% summarize(count = n())
# Enter code here
negative_sentiment_dataframe <- comm_data %>%
filter(sentiment < 0) %>%
select(date, sender, message)
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(date, sender, message)
# Enter code here
?case_when
comm_data %>%
mutate(sentiment_label = case_when(
sentiment_score > 0 ~ "Positive",
sentiment_score == 0 ~ "Neutral",
sentiment_score < 0 ~ "Negative",
TRUE ~ "Unknown"))
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment_score > 0 ~ "Positive",
sentiment_score == 0 ~ "Neutral",
sentiment_score < 0 ~ "Negative",
TRUE ~ "Unknown"))
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
TRUE ~ "Unknown"))
# Enter code here
new_dataframe <- comm_data %>%
mutate(sentiment_length_product = sentiment * nchar(message)) %>%
arrange(desc(sentiment_length_product))
# Enter code here
arrange(comm_data,des(sentiment * length(message)))
# Enter code here
arrange(select(sentiment * length(message)),des(sentiment * length(message)))
# Enter code here
arrange(select(sentiment * length(message)), des(sentiment * length(message)))
# Enter code here
new_dataframe <- comm_data %>%
mutate(sentiment_length_product = sentiment_score * nchar(message)) %>%
arrange(desc(sentiment_length_product))
# Enter code here
new_dataframe <- comm_data %>%
mutate(sentiment_length_product = sentiment * nchar(message)) %>%
arrange(desc(sentiment_length_product))
# Enter code here
new_dataframe <- comm_data %>%
mutate(sentiment_length_product = sentiment * nchar(message)) %>%
arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>%
mutate(sentiment_length_product = sentiment * nchar(message)) %>%
arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>% mutate(sentiment_length_product = sentiment * length(message)) %>% arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>% mutate(sentiment_length_product = sentiment * nchar(message)) %>% arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>% mutate(sentiment_length_product = sentiment * length(message)) %>% arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>% mutate(sentiment_length_product = sentiment * nchar(message)) %>% arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(total_characters_sent = sum(total_characters)) %>% arrange(desc(total_characters_sent)) %>% head(1)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data %>% select (date, channel, message)
# Enter code here
comm_data %>% select(date, channel, message)
# Enter code here
select(date, channel, message)
# Enter code here
library(tidyverse)
comm_data <- read_csv("CommQuest2023_Larger.csv")
# Enter code here
comm_data %>% select(date, channel, message)
# Enter code here
comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
# Enter code here
comm_data %>% select (date, channel, message)
# Enter code here
positive_sentiment <- comm_data %>%
filter(sentiment > 0)
average_sentiment <- positive_sentiment %>%
group_by(sender) %>%
summarize(average_sentiment_score = mean(sentiment))
top_three_senders <- average_sentiment %>%
arrange(desc(average_sentiment_score)) %>%
head(3)
print(top_three_senders)
# Enter code here
comm_data %>%
mutate(date) %>% group_by(date) %>% summarise(average_sentiment_score = mean(sentiment)) %>% arrange(date)
# Enter code here
average_sentiment_by_day <- comm_data %>%
mutate(date) %>% group_by(date) %>% summarise(average_sentiment_score = mean(sentiment)) %>% arrange(date)
print(average_sentiment_by_day)
# Enter code here
comm_data %>%
mutate(date) %>% group_by(date) %>% summarise(average_sentiment_score = mean(sentiment)) %>% arrange(date)
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
TRUE ~ "Unknown"))
# Enter code here
group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrage(des(average_score))
# Enter code here
group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(des(average_score))
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(des(average_score))
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(desc(average_score))
positive_sentiment <- comm_data %>%
filter(sentiment > 0)
average_sentiment <- positive_sentiment %>%
group_by(sender) %>%
summarize(average_sentiment_score = mean(sentiment))
top_three_senders <- average_sentiment %>%
arrange(desc(average_sentiment_score)) %>%
head(3)
print(top_three_senders)
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(desc(average_score))
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(desc(average_score)) %>% head(3)
# Enter code here
comm_data %>% mutate(sentiment_length_product = sentiment * nchar(message)) %>% arrange(desc(sentiment_length_product))
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative")
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
TRUE ~ "Unknown"))
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(highest_total_characters = sum(total_characters)) %>% arrange(desc(highest_total_characters)) %>% head(1)
# Enter code here
new <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
View(new)
# Enter code here
new <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
print(new)
# Enter code here
comm_data %>%
group_by(date) %>% summarise(average_sentiment_score = mean(sentiment)) %>% arrange(date)
View(comm_data)
# Enter code here
newdf <- comm_data %>% select (date, channel, message)
newdf
# Enter code here
new <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
new
# Enter code here
summary_table <- comm_data %>%
group_by(channel) %>%
count(channel)
summary_table
# Enter code here
new_data <- comm_data %>% mutate(sentiment_length = sentiment * nchar(message)) %>% arrange(desc(sentiment_length))
# Enter code here
new_data <- comm_data %>% mutate(sentiment_length = sentiment * nchar(message)) %>% arrange(desc(sentiment_length))
new_data
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(highest_characters = sum(total_characters)) %>% arrange(desc(highest_characters)) %>% head(1)
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(highest_characters = sum(total_characters)) %>% arrange(desc(highest_characters)) %>% head(1)
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(highest_characters = sum(total_characters)) %>% arrange(desc(highest_characters)) %>% head(1)
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(desc(average_score)) %>% select(1:3)
# Enter code here
comm_data %>% group_by(sender) %>% summarise(average_score=mean(sentiment)) %>% arrange(desc(average_score)) %>% slice(1:3)
# Enter code here
comm_data %>% mutate(total_characters = nchar(message)) %>% group_by(date) %>% summarise(highest_characters = sum(total_characters)) %>% arrange(desc(highest_characters)) %>% slice(1)
setwd("~/Desktop/nus/y2s1/NM2207/Week4/challenge-4")
