radiant:::radiant()
radiant:::radiant()
radiant:::radiant()
radiant:::radiant()
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
FALSE ~ "Unknown"))
# Enter code here
library(tidyverse)
comm_data <- read_csv("CommQuest2023_Larger.csv")
# Enter code here
newdf <- comm_data %>% select (date, channel, message)
newdf
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
FALSE ~ "Unknown"))
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative",
)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
x <- 5
shadowing_example <- function() {
x <- 10
cat("Inside the function, x =", x, "\n")
}
shadowing_example()
cat("Outside the function, x =", x, "\n")
library(magick)
# Enter code here
#install.packages("magick")
library(magick)
str(magick::magick_config())
#brew install imagemagick@6
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
return(output_path)
}
text_input <- "Cruel Summer"
image_path <- "/Users/haley/Desktop/IMG_1306.jpeg"
TS <- generate_meme(text_input, image_path)
print(TS)
# Enter code here
analyze_text_game <- function(sentence) {
words <- strsplit(sentence, "\\s+")
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
words <- strsplit(sentence, "\\s+")
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
words <- strsplit(sentence, "\\s+")
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- strsplit(sentence, "\\s+")
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
if (avg_word_length <= 4) {
skill_level <- "Basic"
} else if (avg_word_length <= 6) {
skill_level <- "Intermediate"
} else {
skill_level <- "Advanced"
}
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
#skill_level <- ifelse(avg_word_length < 4, "Basic",
#  ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
cat("\nYour Communication Skill Level:", skill_level, "\n")
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
#if (avg_word_length <= 4) {
# skill_level <- "Basic"
#  } else if (avg_word_length <= 6) {
#   skill_level <- "Intermediate"
#  } else {
#   skill_level <- "Advanced"
#  }
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic",
ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
#if (avg_word_length <= 4) {
# skill_level <- "Basic"
#  } else if (avg_word_length <= 6) {
#   skill_level <- "Intermediate"
#  } else {
#   skill_level <- "Advanced"
#  }
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
}
skill_level <- ifelse(avg_word_length < 4, "Basic", "Advanced")
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
sentence <- readLines(n=1)
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
#if (avg_word_length <= 4) {
# skill_level <- "Basic"
#  } else if (avg_word_length <= 6) {
#   skill_level <- "Intermediate"
#  } else {
#   skill_level <- "Advanced"
#  }
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
cat("Communication skill level:", skill_level, "\n")
#}
skill_level <- ifelse(avg_word_length < 4, "Basic", "Advanced")
#  ifelse(avg_word_length < 6, "Intermediate", "Advanced"))
cat("\nYour Communication Skill Level:", skill_level, "\n")
}
analyze_text_game()
knitr::opts_chunk$set(echo = TRUE)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/IMG_1306.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
# Enter code here
#install.packages("magick")
library(magick)
str(magick::magick_config())
#brew install imagemagick@6
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/NM2207/renheee7/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201659.jpeg"
yayay <- generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201659.jpeg"
generate_meme(text_input, image_path)
setwd("~/Desktop/nus/y2s1/NM2207/renheee7/Week5")
generate_meme <- function(text, image_path) {
image <- image_read(image_path)
image <- image_scale(image, "600")
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201659.jpeg"
generate_meme(text_input, image_path)
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201659.jpeg"
generate_meme(text_input, "meme20230911201659.jpeg")
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201658.jpeg"
generate_meme(text_input, "meme20230911201658.jpeg")
# Enter code here
#install.packages("magick")
library(magick)
#brew install imagemagick@6
# Enter code here
#install.packages("magick")
library(magick)
#brew install imagemagick@6
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(image, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201658.jpeg"
generate_meme(text_input, "meme20230911201658.jpeg")
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(meme, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201658.jpeg"
generate_meme(text_input, "meme20230911201658.jpeg")
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(meme, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
print(meme)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
image_path <- "/Users/haley/Desktop/nus/y2s1/NM2207/renheee7/Week5/meme20230911201658.jpeg"
generate_meme(text_input, "meme20230911201658.jpeg")
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
#sentence <- readline(prompt="Type here")
sentence <- "sajkfh afjkl aljkf alfjk"
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
skill_level <- ifelse(avg_word_length < 4, "Basic", "Advanced")
cat("Communication skill level:", skill_level, "\n")
}
analyze_text_game()
generate_meme <- function(text, image_path) {
meme <- image_read(image_path)
meme <- image_annotate(meme, text, gravity = "center", color = "white", size = 20, boxcolor = "pink")
image_browse(meme)
output_path <- paste0("meme", format(Sys.time(), "%Y%m%d%H%M%S"), ".jpeg")
image_write(meme, output_path)
print(meme)
#return(output_path)
}
text_input <- "But the banana doesnt have a head"
generate_meme(text_input, "meme20230911201658.jpeg")
# Enter code here
analyze_text_game <- function(sentence) {
cat("hello world")
#sentence <- readline(prompt="Type here")
sentence <- "sajkfh afjkl aljkf alfjk"
sentence
words <- unlist(strsplit(sentence, "\\s+"))
no_words <- length(words[[1]])
no_chars <- nchar(sentence)
avg_word_length <- no_chars / no_words
cat("Number of words:", no_words, "\n")
cat("Number of characters:", no_chars, "\n")
cat("Average word length:", avg_word_length, "\n")
skill_level <- ifelse(avg_word_length < 4, "Basic", "Advanced")
cat("Communication skill level:", skill_level, "\n")
}
analyze_text_game()
